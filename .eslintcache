[{"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/index.js":"1","/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/App.js":"2","/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/reportWebVitals.js":"3","/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Navigation/Navigation.js":"4","/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Logo/Logo.js":"5","/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/ImageLinkForm/ImageLinkForm.js":"6","/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Rank/Rank.js":"7","/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/FaceRecognition/FaceRecognition.js":"8","/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Signin/Signin.js":"9","/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Register/Register.js":"10"},{"size":519,"mtime":1608663405312,"results":"11","hashOfConfig":"12"},{"size":3874,"mtime":1609883103388,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608662733711,"results":"14","hashOfConfig":"12"},{"size":764,"mtime":1608764036247,"results":"15","hashOfConfig":"12"},{"size":479,"mtime":1608664612632,"results":"16","hashOfConfig":"12"},{"size":744,"mtime":1608679226177,"results":"17","hashOfConfig":"12"},{"size":329,"mtime":1609030069034,"results":"18","hashOfConfig":"12"},{"size":511,"mtime":1608760609430,"results":"19","hashOfConfig":"12"},{"size":3153,"mtime":1609201616765,"results":"20","hashOfConfig":"12"},{"size":3696,"mtime":1609875992498,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"99gpg6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/index.js",[],["44","45"],"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/App.js",[],"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/reportWebVitals.js",[],"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Navigation/Navigation.js",[],"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Logo/Logo.js",[],"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/ImageLinkForm/ImageLinkForm.js",[],"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Rank/Rank.js",[],"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/FaceRecognition/FaceRecognition.js",[],"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Signin/Signin.js",[],"/Users/kylemcdonald/Desktop/portfolio/facerecognitionbrain/src/Components/Register/Register.js",["46"],"import React from 'react';\n\n\nclass Register extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            password: ''\n        }\n    }\n\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    onSubmitSignin = () => {\n        console.log(this.state)\n        fetch('http://localhost:3000/register', {\n            method: 'post',\n            headers: {'Content-type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n        .then(response => response.json())\n        .then(user=> {\n            if (user.id){\n                this.props.loadUser(user)\n                this.props.onRouteChange('home')\n            }\n        })\n    }\n    render(){\n        const {onRouteChange} = this.props\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                            <input \n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                            type=\"text\" \n                            name=\"name\"  \n                            id=\"name\"\n                            onChange={this.onNameChange}\n                            />\n                        </div>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input \n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"email\" \n                            name=\"email-address\"  \n                            id=\"email-address\"\n                            onChange={this.onEmailChange}\n                            />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input \n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"password\" \n                            name=\"password\"  \n                            id=\"password\"\n                            onChange={this.onPasswordChange}\n                            />\n                        </div>\n                        </fieldset>\n                        <div className=\"\">\n                        <input \n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                            type=\"submit\" \n                            value=\"Register\"\n                            onClick={this.onSubmitSignin}\n                            />\n                        </div>\n                    </div>\n                </main>\n            </article>\n        )\n    }\n}\nexport default Register",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":44,"column":16,"nodeType":"53","messageId":"54","endLine":44,"endColumn":29},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'onRouteChange' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]